<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--#region-->
    <!--#endregion-->
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#00BEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF6C6C6C"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#55A8A8A8"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF9C9C9C"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" 
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                       StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Button Menu-->
    <Style x:Key="ButtonMenuStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Base Button Style-->
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="btn" Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                        <Border>
                            <Grid>
                                <Label Content="{TemplateBinding Content}"
                                   Background="Transparent" FontSize="20"
                                   VerticalAlignment="Center" HorizontalContentAlignment="Center">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Foreground" Value="#CBCBCB"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btn}" 
                                                         Value="True">
                                                    <Setter Property="Foreground" Value="#ECECEC"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={
                                                RelativeSource Mode=FindAncestor, 
                                                AncestorType={x:Type Button}}, 
                                                Path=IsPressed}" Value="True">
                                                    <Setter Property="Foreground" Value="#7F7F7F"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Button Tail-->
    <Style x:Key="ButtonTailStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MaxHeight" Value="33"/>
        <Setter Property="MinHeight" Value="33"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="btn" Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                        <Border>
                            <Grid>
                                <Label Content="{TemplateBinding Content}"
                                   Background="Transparent" FontSize="20"
                                   VerticalAlignment="Center" HorizontalContentAlignment="Center">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Foreground" Value="#CBCBCB"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btn}" 
                                                         Value="True">
                                                    <Setter Property="Foreground" Value="#ECECEC"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={
                                                RelativeSource Mode=FindAncestor, 
                                                AncestorType={x:Type Button}}, 
                                                Path=IsPressed}" Value="True">
                                                    <Setter Property="Foreground" Value="#7F7F7F"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Add Button Tail-->
    <Style x:Key="ButtonAddNewTaillStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <!--<Setter Property="MaxHeight" Value="33"/>
        <Setter Property="MinHeight" Value="33"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="btn" Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                        <Border CornerRadius="30"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Label Content="{TemplateBinding Content}"
                                   Background="Transparent" FontSize="20"
                                   VerticalAlignment="Center" HorizontalContentAlignment="Center">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Foreground" Value="#CBCBCB"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btn}" 
                                                         Value="True">
                                                    <Setter Property="Foreground" Value="#ECECEC"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={
                                                RelativeSource Mode=FindAncestor, 
                                                AncestorType={x:Type Button}}, 
                                                Path=IsPressed}" Value="True">
                                                    <Setter Property="Foreground" Value="#7F7F7F"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->


    <!--#region MainBtnStyle -->
    <Style x:Key="BtnCaptionStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="btn" Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                        <Border>
                            <Grid>
                                <Label Content="{TemplateBinding Content}"
                                       FontSize="{TemplateBinding FontSize}" 
                                       Background="Transparent" 
                                       
                                   VerticalAlignment="Center" HorizontalContentAlignment="Center">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Foreground" Value="#CBCBCB"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btn}" 
                                                         Value="True">
                                                    <Setter Property="Foreground" Value="#ECECEC"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={
                                                RelativeSource Mode=FindAncestor, 
                                                AncestorType={x:Type Button}}, 
                                                Path=IsPressed}" Value="True">
                                                    <Setter Property="Foreground" Value="#7F7F7F"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}" 
               BasedOn="{StaticResource ButtonMenuStyle}">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="90"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
    </Style>

    <ControlTemplate x:Key="SysBtnTemplate" TargetType="Button">
        <Grid x:Name="Btn" Height="30" Width="30">
            <Border>
            </Border>
        </Grid>
    </ControlTemplate>


</ResourceDictionary>